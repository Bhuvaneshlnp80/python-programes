#reverse a string
'''a='bhuvi'
b=a[::-1]
print(b)'''

#maximum element in array
'''
a=[1,2,3,4,6,9,5]
b=a.sort(reverse=True)
print(a[0])
'''
#palindrome
'''a='mam'
b=a[::-1]
if a==b:
    print('palindrome')
else:
    print('it is not palindrome')'''
#missing number in array
'''
a=[1,2,3,4,6,7,8,9,10]
for i in range(0,len(a)-1):
    if a[i]+1==a[i+1] :
        continue
    else:
        print(a[i]+1)'''

#intersection of two arrays
'''
a=[1,2,3,4,5]
b=[3,4,5,6,7]
for i in range(len(a)+1):
    if i in b:
        print(i,end=' ' )
'''
'''
#multiples of number:

n=30
i=0
while i<n:
    i+=2
    print(i)

#least common multiples :


#lcm 
n=int(input())
b=int(input())
big= n if n>b else b
while True:
    if big%n==0 and big%b==0:
        print(big)
        break
    big+=1


#factorial

n=6
t=1
for i in range(1,n+1):
    if i<=n:
        t=t*i
print(t)

n = 6
factorial = 1

for i in range(1, n + 1):
    factorial *= i

print(f"The factorial of {n} is {factorial}")


#GCD  :

a=48
b=18
while b:
    a,b=b,a%b
print(a)


#palindrome :


a=('mam')
b=a[::-1]
if a==b:
    print('palindrome')


#leap year :
n=2010
if (n%4==0 and n%100!=0) or n%400:
	print("leap year")
else:
	print("not a leap year")


#reverse a string without slicing or reverse function:

a=('meam')
reversed=""
for i in a:
    reversed=i+reversed
print(reversed)

#reversing a string:

a='km'
rev=a[::-1]
print(rev)


#if want to print colon without using the colon in a program : use \x3a

#for semicolon use: \x3b

#pattern program:
11111
1111
111
11
1
row=5
while row>=1:
    col=1
    while col<=row:
        print(1,end='')
        col+=1
    print()
    row-=1

#pattern program:
5
54
543
5432
54321

row=5
while row>=1:
    col=5
    while col>=row:
        print(col,end=' ')
        col-=1
    print()
    row-=1

1
12
123
1234
12345

row=1
while row<=5:
    col=1
    while col<=row:
        print(col,end=' ')
        col+=1
    print()
    row+=1

-----5
----44
---333
--2222
-11111

row=5
while row>=1:
	col2=5
	col=1
	while col<=row:
		print("-",end=" ")
		col+=1
	while col2>=row:
	    print(row,end=" ")
	    col2-=1
	print()
	row-=1

          1   
        2   2   
      3   3   3   
    4   4   4   4   
  5   5   5   5   5   
row=5
val=0
while row>=1:
	col2=5
	col=1
	while col<=row:
		print(" ",end=" ")
		col+=1
	val+=1
	while col2>=row:
	    print(val,' ',end=" ")
	    col2-=1
	print()
	row-=1

- 5 5 5 5 5 
- - 4 4 4 4 
- - - 3 3 3 
- - - - 2 2 
- - - - - 1 

row=5
while row>=1:
    col=5
    col2=1
    while col>=row:
        print("-",end=" ")
        col-=1
    while col2<=row:
        print(row,end=" ")
        col2+=1
    print()
    row-=1

#fibonacci series

n=int(input())
f1,f2=0,1
c=0
while c<n:
    print(f1)
    f2=f1+f2
    f1=f2-f1
    c+=1

#decimal to biinary

n=6
while n>0:
    r=n%2
    print(r)
    n=n//2
    
#binary to decimal:

import math
n=int(input())
a=0
i=0
while n>0:
    rem=n%10
    val=rem*int(math.pow(2,i))
    a=a+val
    n=n//10
    i+=1
print(a)

#fibonacci series

a=-1
b=1
t=10
for i in range(t+1):
    c=a+b
    print(c)
    a=b
    b=c

#armstrong

a=153
b=0
c=a
while c>0:
    b=c%10
    b+=b**3
    c=c//10
if a==b:
    print('armstrong')
else:
    print('not an armstrong')

#nested while loops


i=1
while i<=3:
    j=1
    while j<=5:
        print(i+j,end=' ')
        j+=1 
    print()
    i+=1

i=1
while i<=3:
    j=1
    while j<=5:
        print(j,end=' ')
        j+=1 
    i+=1

#finding a string position using find condition:

s='python is good'
pos=-1
c=0
while True:
    pos=s.find('i',pos+1,len(s))
    if pos==-1:
        break
    else:
        print('element in the position of:',pos)
    c+=1
print(c)

#mobile number checking 

a='123423465'
for i  in a:
    if not(i>='0' and i<='9'):
        print("not a correct number")
        break
else:
    print(' correct number')

#finding space count

a='hi i am bhuvi'
spacecount=0
for i in a:
    if i==' ':
        spacecount+=1
else:
    print(spacecount)

#combining two strings 

a='buahivs'
b='hvnesh'
c=''
if len(a)>len(b):
    for i in range(len(b)):
        c=c+a[i]+b[i]
    
c=c+a[len(b):]
print(c)

#matrix

matrix=[[10,20,30],
        [40,50,60],
        [70,80,90]]
for i in range(len(matrix)):
    for j in range (len(matrix)):
        print(matrix[j][i],end=' ')
    print()

'''o/p
10 40 70 
20 50 80 
30 60 90'''

#list problem

a=['bhuvi','vs','dhina','nizi']
b=[12,10,4,6]
n=len(a)
for i  in range(n):
    for j in range(i+1,n):
        if b[i]>b[j]:
            b[i],b[j]=b[j],b[i]
            a[i],a[j]=a[j],a[i]
print('the winner list of first to last is:')
for i in range(n):
    print(f"{i+1}.{a[i]} - {b[i]} seconds") 


#multiplication table

a=int(input())
b=2
for i in range(a-1):
    c=(i+1)*b
    print(i+1,"*",b,"=",c)
print()

#sum of digits using recursive function:

def sumofdig(n):
    if n==0:
        return 0
    else:
        rem=n%10
        no=n//10
        return  rem+sumofdig(no)
print(sumofdig(1234)) 

#class problems

class gym():
    noofitems=10
    def __init__(self,name,weight):
        self.name=name
        self.weight=weight
        print('equipment name is :',name)
        print('equipment weight is :',weight)
gym('dumbel',5)



